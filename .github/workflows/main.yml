name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go for Building
        uses: actions/setup-go@v2
        with:
          go-version: '^1.13.7'
      - name: Setup Ginkgo Test Framework
        run: go get -u github.com/onsi/ginkgo/ginkgo
      - name: Lint and Build Carrier
        run: make build-all
      - name: Test Carrier
        run: make test
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: K3S with Calico and Helm
        uses: manics/action-k3s-helm@v0.2.2
        with:
          k3s-version: v1.19.5+k3s2
      - name: Cache Tools
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/tools
          key: ${{ runner.os }}-tools
      - name: Install Tools
        run: make tools-install
      - name: Install Vault CLI
        uses: innovationnorway/setup-vault@v1.0.3
        with:
          version: 1.4.2
      - name: Renew Vault Token
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
          VAULT_ADDR: https://volt.cap.explore.suse.dev
        run: |
          vault token renew
      - name: Read configuration
        uses: hashicorp/vault-action@v2.1.0
        with:
          url: https://volt.cap.explore.suse.dev/
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secret/data/carrier "docker_registry_username"     | REGISTRY_USERNAME;
            secret/data/carrier "docker_registry_password"     | REGISTRY_PASSWORD;
      - name: Add Tools to PATH
        run: |
          echo "`pwd`/output/bin" >> $GITHUB_PATH
      - name: Acceptance tests
        run: |
          make test-acceptance
      - name: Log
        if: ${{ always() }}
        run: |
          # cat "$HOME/.carrier.log" - Not created by the go-based carrier cli

          echo "-----------------------------------------------"
          echo "-----------------------------------------------"
          echo "ALL RESOURCES"
          echo "-----------------------------------------------"
          echo "-----------------------------------------------"

          kubectl get all -A -o wide

          # echo "-----------------------------------------------"
          # echo "-----------------------------------------------"
          # echo "DESCRIBE EIRINI-WORKLOADS PODS"
          # echo "-----------------------------------------------"
          # echo "-----------------------------------------------"

          # kubectl get pod -n eirini-workloads -o json | jq -r .items[].metadata.name | xargs -I{} kubectl describe pod -n eirini-workloads {}
